name: Release virtualenv bundles (macOS)

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version tag to release"
        required: false
        default: "1.0.0"

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - runner: macos-14
            arch: arm64
            platform_tag: macos-arm64
          - runner: macos-13
            arch: x86_64
            platform_tag: macos-x86_64
    env:
      VERSION: ${{ inputs.version }}
    steps:
      - name: Check out source
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Build virtualenv bundle
        run: python scripts/build_venv_bundle.py --platform-tag ${{ matrix.platform_tag }}

      - name: Rename artifacts with version
        working-directory: dist/artifacts
        run: |
          mv mycli-${{ matrix.platform_tag }} mycli-${VERSION}-${{ matrix.platform_tag }}
          mv mycli-${{ matrix.platform_tag }}.tar.gz mycli-${VERSION}-${{ matrix.platform_tag }}.tar.gz
          mv mycli-${{ matrix.platform_tag }}.tar.gz.sha256 mycli-${VERSION}-${{ matrix.platform_tag }}.tar.gz.sha256

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mycli-${{ env.VERSION }}-${{ matrix.platform_tag }}
          path: |
            dist/artifacts/mycli-${{ env.VERSION }}-${{ matrix.platform_tag }}.tar.gz
            dist/artifacts/mycli-${{ env.VERSION }}-${{ matrix.platform_tag }}.tar.gz.sha256

  release:
    needs: build
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ inputs.version }}
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: release_artifacts
          merge-multiple: true

      - name: List release files
        run: |
          ls -R release_artifacts

      - name: Prepare release assets
        run: |
          mkdir -p release
          for arch in macos-arm64 macos-x86_64; do
            tar_path=$(find release_artifacts -type f -name "mycli-${VERSION}-${arch}.tar.gz" -print -quit)
            sha_path=$(find release_artifacts -type f -name "mycli-${VERSION}-${arch}.tar.gz.sha256" -print -quit)
            if [[ -z "$tar_path" || -z "$sha_path" ]]; then
              echo "Missing artifacts for ${arch}" >&2
              exit 1
            fi
            cp "$tar_path" release/
            cp "$sha_path" release/
          done

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: v${{ env.VERSION }}
          generate_release_notes: true
          files: |
            release/mycli-${{ env.VERSION }}-macos-arm64.tar.gz
            release/mycli-${{ env.VERSION }}-macos-arm64.tar.gz.sha256
            release/mycli-${{ env.VERSION }}-macos-x86_64.tar.gz
            release/mycli-${{ env.VERSION }}-macos-x86_64.tar.gz.sha256
